#!/usr/bin/env bash
set -eu

BIN_PATH=@BIN_PATH@
BBC=${BIN_PATH}/bbc
TCO=${BIN_PATH}/tco
LLC=${BIN_PATH}/llc

ARGS=()

while [[ $# -gt 0 ]]; do
    case $1 in
        -o)
            OUT="$2"
            shift 2
            ;;
        -c)
            NO_LINKING=true
            shift
            ;;
        -O0|-O1|-O2|-O3|-fpic|-fPIC|-fPIE)
            shift
            ;;
        -*|--*)
            echo "Unknown argument $1"
            exit 1
            ;;
        *)
            ARGS+=("$1")
            shift
            ;;
    esac
done

set -- "${ARGS[@]}"

IN=$1
IN_BASE="${IN%.*}"

OUT=${OUT-${IN_BASE}.o}
OUT_BASE="${OUT%.*}"

${BBC} --math-runtime=llvm-pgmath "$IN" -o - | \
    ${TCO} --external-name-interop | \
    ${TCO} --target=wasm32-unknown-emscripten > \
    "${OUT_BASE}.ll"

# Replace dots in symbols of link-once constants by underscore to
# avoid syntax errors in the .js glue generated by Emscripten
sed -i.bak "s/_QQcl\./_QQcl_/g" ${OUT_BASE}.ll && rm ${OUT_BASE}.ll.bak

if [ -z ${NO_LINKING-} ]
then
    ${LLC} -march=wasm32 -filetype=obj --relocation-model=pic "${OUT_BASE}.ll" -o "${OUT_BASE}.s"
    wasm-ld "${OUT_BASE}.s" -Oz -o "${OUT}" --no-entry --allow-undefined --relocatable --experimental-pic
else
    ${LLC} -march=wasm32 -O2 -filetype=obj --relocation-model=pic "${OUT_BASE}.ll" -o "${OUT}"
fi
